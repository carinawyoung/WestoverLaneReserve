@page
@model LaneScheduleModel
@{
    ViewData["Title"] = "Lane Schedule";
}

<h1>@ViewData["Title"]</h1>
@if (TempData["ErrorMessage"] != null)
{
    <div id="Error-message" class="alert alert-danger" role="alert">
    @TempData["ErrorMessage"]
</div>
}

<p>This is the schedule page</p>

<div class="container">
    <h2>Grid of Buttons</h2>
    <div class="row">
        <div class="col">&nbsp;</div><!-- Empty column for label alignment -->
        @for (int col = 0; col < Model.WeekDates.Count; col++)
        {
            <div class="col text-center">
                <h5>@Model.WeekDates[col]</h5>
            </div>
        }
    </div>

    @for (int row = 0; row < Model.Times.Count; row++)
    {
        <div class="row text-center align-items-center">
            <div class="col d-flex align-items-center justify-content-center">
                <h5>@Model.Times[row]</h5>
            </div>
            @for (int col = 0; col < Model.WeekDates.Count; col++)
            {
                string formattedDate = DateTime.ParseExact(Model.WeekDates[col], "ddd M/d",
                System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd");
                string formattedTime = DateTime.ParseExact(Model.Times[row], "h:mm tt",
                System.Globalization.CultureInfo.InvariantCulture).ToString("HH:mm");
                int lanesAvailable = Model.LaneAvailability[formattedDate][formattedTime];

                var slotDateTime = DateTime.ParseExact($"{Model.WeekDates[col]} {Model.Times[row]}", "ddd M/d h:mm tt",
                System.Globalization.CultureInfo.InvariantCulture);
                var isPast = slotDateTime < DateTime.Now;
                var buttonClass = isPast ? "btn btn-secondary btn-block md-2" : "btn btn-primary btn-block mb-2";

                <div class="col d-flex align-items-center justify-content-center">
                    <!-- each button is wrapped in a form to allow submission -->
                    <form method="post" asp-page-handler="Reserve">
                        <button type="submit" class="btn btn-primary btn-block mb-2" name="reserve"
                            value="@formattedDate,@formattedTime"
                            onclick="return confirmReservation('@Model.WeekDates[col]', '@Model.Times[row]');"
                            disabled="@isPast">
                            @lanesAvailable Lanes Available
                        </button>
                    </form>

                </div>
            }

        </div>
    }

</div>

<script>
    function confirmReservation(date, time) {
        return confirm(`Make a reservation for ${date} at ${time}?`);
    }

    // Script to fade out the error message
    window.onload = function () {
        setTimeout(function () {
            var errorMessage = document.getElementById('Error-message');
            if (errorMessage) {
                errorMessage.style.opacity = 0; // Trigger fade out
                // Set the element to 'display: none' after the fade-out duration
                setTimeout(function () {
                    errorMessage.style.display = 'none';
                }, 1000); // This should match the CSS transition time
            }
        }, 5000); // Time after which fade out starts
    };

</script>